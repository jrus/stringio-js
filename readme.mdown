StringIO
========

File-like objects that read from or write to a string buffer.

A nearly direct port of Pythonâ€™s StringIO module.

    f = StringIO()       # ready for writing
    f = StringIO(buf)    # ready for reading
    f.close()            # explicitly release resources held
    pos = f.tell()       # get current position
    f.seek(pos)          # set current position
    f.seek(pos, mode)    # mode 0: absolute; 1: relative; 2: relative to EOF
    buf = f.read()       # read until EOF
    buf = f.read(n)      # read up to n bytes
    buf = f.readline()   # read until end of line ('\n') or EOF
    list = f.readlines() # list of f.readline() results until EOF
    f.truncate([size])   # truncate file to at most size (default: current pos)
    f.write(buf)         # write at current position
    f.writelines(list)   # for line in list: f.write(line)
    f.getvalue()         # return whole file's contents as a string

Notes:

  - Seeking far beyond EOF and then writing will insert real null
    bytes that occupy space in the buffer.

  - There's a simple test set (see end of this file).

Licensed under the MIT License:

Copyright (C) 2012 Jacob Rus

Permission is hereby granted, free of charge, to any person obtaining 
a copy of this software and associated documentation files (the 
"Software"), to deal in the Software without restriction, including 
without limitation the rights to use, copy, modify, merge, publish, 
distribute, sublicense, and/or sell copies of the Software, and to 
permit persons to whom the Software is furnished to do so, subject to 
the following conditions:

The above copyright notice and this permission notice shall be 
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY 
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, 
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE 
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.